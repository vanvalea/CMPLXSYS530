# This is the chaos gamefrom math import *                  # useful math functionsimport numpy as np                  # useful array objects                                     # (also a core scientific computing library)import matplotlib.pyplot as plt     # nice plotting commandsfrom random import random, randint  # random number generation functions# takes in two tuples and returns a new tuple# a midpoint between two pointsdef midpoint(x, y):    # tuples are 0 indexed    xcoord = 0.5 * (x[0] + y[0])    ycoord = 0.5 * (x[1] + y[1])    return (xcoord, ycoord)# list calle d cordercorner = [    (0,0),    (1,0),    (0.5, sqrt(3)/2)    ]# number of total pointsN = 1000# lists for our coordinatesx = np.zeros(N)y = np.zeros(N)# starting positionx[0] =  random()y[0] = random()# loop through and run the chaos gamefor i in range(1, N):    vertex = np.random.randint(0, 3)    mid_calc = midpoint(corner[vertex], (x[i-1], y[i-1]))    x[i] = mid_calc[0]    y[i] = mid_calc[1]# plot it allplt.figure()plt.scatter(x, y)plt.scatter((0,1,0.5),(0,0,sqrt(3)/2),color='red') # plot the triangle verticesplt.show()